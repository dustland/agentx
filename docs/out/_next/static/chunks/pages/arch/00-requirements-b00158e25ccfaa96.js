(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[359],{9522:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/arch/00-requirements",function(){return n(8516)}])},8516:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return c}});var i=n(5893),s=n(2673),a=n(8124),r=n(4509);n(4759);var o=n(2643);let c=[];function l(e){let t=Object.assign({h1:"h1",ul:"ul",li:"li",p:"p",input:"input",strong:"strong",code:"code",em:"em"},(0,o.a)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{children:"AgentX Framework: Core Requirements"}),"\n",(0,i.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","1.  ",(0,i.jsx)(t.strong,{children:"File-Based Configuration:"})," The entire multi-agent team structure and collaboration workflow are defined in and loaded from static, file-based configurations (e.g., ",(0,i.jsx)(t.code,{children:"team.yaml"}),"). These configurations serve as the complete, declarative definition of a team."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","2.  ",(0,i.jsx)(t.strong,{children:"Orchestrator as Central Controller:"})," The ",(0,i.jsx)(t.code,{children:"Orchestrator"})," is the primary entry point and central controller for a task. It is responsible for managing the ",(0,i.jsx)(t.em,{children:"flow"})," of the collaboration, not its content. Its duties include accepting the initial prompt, determining the next agent to act, dispatching tool calls, and terminating the collaboration based on defined conditions."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","3.  ",(0,i.jsx)(t.strong,{children:"Team State Management:"})," The framework maintains a persistent, file-based state for each task execution. This includes the conversation history, current agent, round count, artifacts, and other execution metadata stored in the task workspace."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","4.  ",(0,i.jsx)(t.strong,{children:"Agent Prompt Templates:"})," Each agent's behavior is defined by a Jinja2 template file that specifies its role, instructions, and context. The framework renders these templates with dynamic context (history, available tools, task prompt) to generate the agent's system prompt."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","5.  ",(0,i.jsx)(t.strong,{children:"Comprehensive Data Structures:"})," The framework uses well-defined Pydantic models for all data structures including TaskStep, ToolCall, ToolResult, Artifact, and various event types. These provide type safety, validation, and serialization."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","6.  ",(0,i.jsx)(t.strong,{children:"Event-Driven Architecture:"})," The framework emits structured events for all significant execution milestones (task start/complete, agent turns, tool calls, handoffs, errors) enabling monitoring, debugging, and integration with external systems."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","7.  ",(0,i.jsx)(t.strong,{children:"Message Streaming Support:"})," Separate from execution events, the framework supports real-time message streaming for UI updates, allowing clients to receive incremental content as it's generated by agents."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","8.  ",(0,i.jsx)(t.strong,{children:"Workspace Management:"})," Each task execution gets its own workspace directory containing state files, artifacts, history logs, and other task-specific data. This enables task persistence, resumption, and artifact management."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","9.  ",(0,i.jsx)(t.strong,{children:"Tool Integration:"})," The framework supports multiple tool types (builtin, python functions, MCP tools, HITL tools) with a unified interface. Tools are configured declaratively and can be shared across agents or restricted to specific agents."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","10. ",(0,i.jsx)(t.strong,{children:"LLM Provider Abstraction:"})," The framework abstracts LLM interactions through a unified interface supporting multiple providers (OpenAI, Anthropic, DeepSeek, Ollama, custom) with provider-specific optimizations and fallback mechanisms."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","11. ",(0,i.jsx)(t.strong,{children:"Handoff Rules:"})," Agent-to-agent handoffs are governed by explicit rules defined in the team configuration. These rules specify conditions, target agents, and handoff types (sequential, parallel) enabling sophisticated collaboration patterns."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","12. ",(0,i.jsx)(t.strong,{children:"Memory Management:"})," The framework provides both short-term (conversation context) and long-term (persistent) memory with semantic search capabilities. Memory operations are tracked and can be queried for debugging and optimization."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","13. ",(0,i.jsx)(t.strong,{children:"Guardrails and Safety:"})," Comprehensive safety mechanisms including input validation, output filtering, rate limiting, and content safety checks. Guardrail policies are configurable per agent and can block, warn, or log violations."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","14. ",(0,i.jsx)(t.strong,{children:"Human-in-the-Loop (HITL):"})," Built-in support for human intervention points through step-through execution mode, allowing users to pause execution, inspect state, modify context, and provide input at any point in the workflow."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","15. ",(0,i.jsx)(t.strong,{children:"Step-Through Debugging:"})," The framework supports step-by-step execution with breakpoints, allowing developers to pause execution, inspect state, modify context, and resume. Essential for development and debugging complex workflows."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",disabled:!0})," ","16. ",(0,i.jsx)(t.strong,{children:"Production Deployment:"})," The framework includes deployment configurations, health checks, performance monitoring, and scaling capabilities for production environments including containerization and cloud deployment support."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","17. ",(0,i.jsx)(t.strong,{children:"Favor DeepSeek Models:"})," The framework defaults to DeepSeek models for reasoning and general scenarios, with easy configuration for other providers when needed."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","18. ",(0,i.jsx)(t.strong,{children:"Autonomous Task Execution:"})," The framework can execute tasks autonomously from start to completion, making intelligent decisions about agent handoffs, tool usage, and task termination without human intervention."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",disabled:!0})," ","19. ",(0,i.jsx)(t.strong,{children:"Advanced Workspace Management:"})," Sophisticated workspace system with semantic search, automatic consolidation, and intelligent context management to maintain relevant information across long conversations."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","20. ",(0,i.jsx)(t.strong,{children:"Rich Artifact Management:"})," Advanced artifact handling including versioning, metadata tracking, cross-references, and support for various media types (code, documents, images, data)."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.input,{type:"checkbox",disabled:!0})," ","21. ",(0,i.jsx)(t.strong,{children:"Intelligent Context Management:"})," Smart context compilation strategies, automatic summarization, and relevance-based filtering to optimize LLM context usage and maintain conversation coherence."]}),"\n"]}),"\n"]})]})}let d={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,o.a)(),e.components);return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)},pageOpts:{filePath:"pages/arch/00-requirements.mdx",route:"/arch/00-requirements",pageMap:[{kind:"Meta",data:{index:"Home","get-started":"Quick Start",arch:"Architecture",api:"API Reference"}},{kind:"Folder",name:"arch",route:"/arch",children:[{kind:"MdxPage",name:"00-requirements",route:"/arch/00-requirements"},{kind:"MdxPage",name:"01-architecture",route:"/arch/01-architecture"},{kind:"MdxPage",name:"02-state-and-context",route:"/arch/02-state-and-context"},{kind:"MdxPage",name:"03-tool-call",route:"/arch/03-tool-call"},{kind:"MdxPage",name:"04-communication",route:"/arch/04-communication"},{kind:"Meta",data:{"00-requirements":"Requirements","01-architecture":"System Architecture","02-state-and-context":"State & Context","03-tool-call":"Tool Calling","04-communication":"Communication"}}]},{kind:"MdxPage",name:"get-started",route:"/get-started"},{kind:"MdxPage",name:"index",route:"/"}],flexsearch:{codeblocks:!0},title:"AgentX Framework: Core Requirements",headings:c},pageNextRoute:"/arch/00-requirements",nextraLayout:a.ZP,themeConfig:r.Z};t.default=(0,s.j)(d)},5789:function(){},4509:function(e,t,n){"use strict";var i=n(5893);t.Z={github:"https://github.com/dustland/agentx",docsRepositoryBase:"https://github.com/dustland/agentx/blob/main/docs",titleSuffix:" – AgentX",logo:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("span",{className:"mr-2 font-extrabold hidden md:inline",children:"AgentX"}),(0,i.jsx)("span",{className:"text-gray-600 font-normal hidden md:inline",children:"The next-generation framework for autonomous multi-agent systems"})]}),head:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("meta",{name:"msapplication-TileColor",content:"#ffffff"}),(0,i.jsx)("meta",{name:"theme-color",content:"#ffffff"}),(0,i.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,i.jsx)("meta",{httpEquiv:"Content-Language",content:"en"}),(0,i.jsx)("meta",{name:"description",content:"AgentX - Build, orchestrate, and scale AI agents with unprecedented simplicity and power"}),(0,i.jsx)("meta",{name:"og:description",content:"AgentX - Build, orchestrate, and scale AI agents with unprecedented simplicity and power"}),(0,i.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,i.jsx)("meta",{name:"twitter:site:domain",content:"dustland.github.io"}),(0,i.jsx)("meta",{name:"twitter:url",content:"https://dustland.github.io/agentx"}),(0,i.jsx)("meta",{name:"og:title",content:"AgentX: Next-generation multi-agent framework"}),(0,i.jsx)("meta",{name:"apple-mobile-web-app-title",content:"AgentX"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon-32x32.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon-16x16.png"})]}),search:!0,prevLinks:!0,nextLinks:!0,footer:!0,footerEditLink:"Edit this page on GitHub",footerText:(0,i.jsxs)(i.Fragment,{children:["MIT ",new Date().getFullYear()," \xa9 Dustland Team."]}),unstable_faviconGlyph:"\uD83E\uDD16",primaryHue:220,primarySaturation:100}}},function(e){e.O(0,[520,888,774,179],function(){return e(e.s=9522)}),_N_E=e.O()}]);