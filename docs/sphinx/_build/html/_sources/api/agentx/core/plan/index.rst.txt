agentx.core.plan
================

.. py:module:: agentx.core.plan


Attributes
----------

.. autoapisummary::

   agentx.core.plan.FailurePolicy
   agentx.core.plan.TaskStatus


Classes
-------

.. autoapisummary::

   agentx.core.plan.Plan
   agentx.core.plan.PlanItem


Module Contents
---------------

.. py:class:: Plan(/, **data: Any)

   Bases: :py:obj:`pydantic.BaseModel`


   The central data structure for the Orchestration System. It defines the entire workflow
   for achieving a high-level goal as a series of interconnected tasks.

   Create a new model by parsing and validating input data from keyword arguments.

   Raises [`ValidationError`][pydantic_core.ValidationError] if the input data cannot be
   validated to form a valid model.

   `self` is explicitly positional-only to allow `self` as a field name.


   .. py:attribute:: goal
      :type:  str
      :value: None



   .. py:attribute:: tasks
      :type:  List[PlanItem]
      :value: None



.. py:class:: PlanItem(/, **data: Any)

   Bases: :py:obj:`pydantic.BaseModel`


   A single item within a plan, representing one unit of work to be performed by an agent.

   Create a new model by parsing and validating input data from keyword arguments.

   Raises [`ValidationError`][pydantic_core.ValidationError] if the input data cannot be
   validated to form a valid model.

   `self` is explicitly positional-only to allow `self` as a field name.


   .. py:attribute:: agent
      :type:  Optional[str]
      :value: None



   .. py:attribute:: approval_required
      :type:  bool
      :value: None



   .. py:attribute:: dependencies
      :type:  List[str]
      :value: None



   .. py:attribute:: goal
      :type:  str
      :value: None



   .. py:attribute:: id
      :type:  str
      :value: None



   .. py:attribute:: name
      :type:  str
      :value: None



   .. py:attribute:: on_failure
      :type:  FailurePolicy
      :value: None



   .. py:attribute:: status
      :type:  TaskStatus
      :value: None



.. py:data:: FailurePolicy

.. py:data:: TaskStatus

