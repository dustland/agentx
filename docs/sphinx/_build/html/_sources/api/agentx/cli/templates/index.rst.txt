agentx.cli.templates
====================

.. py:module:: agentx.cli.templates

.. autoapi-nested-parse::

   Bootstrap Template Generation

   Handles generation of project templates, configurations, and files for the bootstrap system.



Functions
---------

.. autoapisummary::

   agentx.cli.templates.generate_env_example
   agentx.cli.templates.generate_main_py
   agentx.cli.templates.generate_readme
   agentx.cli.templates.generate_template_config
   agentx.cli.templates.generate_template_prompts
   agentx.cli.templates.get_agents_description
   agentx.cli.templates.get_config_lines
   agentx.cli.templates.get_default_model
   agentx.cli.templates.get_sample_config
   agentx.cli.templates.get_template_description


Module Contents
---------------

.. py:function:: generate_env_example(model: str) -> str

   Generate .env.example file with API key templates.


.. py:function:: generate_main_py(project_name: str, template: str) -> str

   Generate main.py file for the project.


.. py:function:: generate_readme(project_name: str, template: str, model: str) -> str

   Generate README.md for the project.


.. py:function:: generate_template_config(template: str, model: str) -> str

   Generate team configuration based on template using preset agents.


.. py:function:: generate_template_prompts(template: str) -> Dict[str, str]

   Generate prompt files based on template - now minimal since we use presets.


.. py:function:: get_agents_description(template: str) -> str

   Get agents description for template.


.. py:function:: get_config_lines(template: str) -> str

   Get number of configuration lines for template.


.. py:function:: get_default_model(model: str) -> str

   Get default model name for provider.


.. py:function:: get_sample_config(template: str) -> str

   Get sample configuration for template.


.. py:function:: get_template_description(template: str) -> str

   Get detailed description for template.


