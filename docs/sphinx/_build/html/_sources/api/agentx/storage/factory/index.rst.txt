agentx.storage.factory
======================

.. py:module:: agentx.storage.factory

.. autoapi-nested-parse::

   Storage factory - Creates storage providers using factory pattern.

   Separates pure filesystem abstraction from business logic.



Attributes
----------

.. autoapisummary::

   agentx.storage.factory.logger


Classes
-------

.. autoapisummary::

   agentx.storage.factory.StorageFactory


Module Contents
---------------

.. py:class:: StorageFactory

   Factory for creating storage providers.

   Creates filesystem abstractions that can be swapped for different backends
   (local, S3, Azure, etc.) and workspace storage for business logic.


   .. py:method:: create_file_storage(base_path: Union[str, pathlib.Path]) -> agentx.storage.interfaces.FileStorage
      :staticmethod:


      Create a filesystem abstraction.

      This can be swapped for different backends like S3FileStorage,
      AzureFileStorage, etc. without changing the business logic.

      :param base_path: Base path for the filesystem

      :returns: FileStorage implementation



   .. py:method:: create_workspace_storage(workspace_path: Union[str, pathlib.Path], use_git_artifacts: bool = True) -> agentx.storage.workspace.WorkspaceStorage
      :staticmethod:


      Create a workspace storage for business logic.

      Handles business concepts like artifacts, messages, execution plans
      using the filesystem abstraction underneath.

      :param workspace_path: Path to the workspace directory
      :param use_git_artifacts: Whether to use Git for artifact versioning

      :returns: WorkspaceStorage instance



.. py:data:: logger

