agentx.tool.registry
====================

.. py:module:: agentx.tool.registry

.. autoapi-nested-parse::

   Tool Registry - The single source of truth for tool definitions.



Attributes
----------

.. autoapisummary::

   agentx.tool.registry.logger


Classes
-------

.. autoapisummary::

   agentx.tool.registry.ToolRegistry


Functions
---------

.. autoapisummary::

   agentx.tool.registry.get_tool_registry


Module Contents
---------------

.. py:class:: ToolRegistry

   A thread-safe registry for managing tools and their configurations.


   .. py:method:: clear()

      Clear all registered tools and toolsets. Useful for testing.



   .. py:method:: get_builtin_tools() -> List[str]

      Get list of all builtin tool names.



   .. py:method:: get_custom_tools() -> List[str]

      Get list of all custom (non-builtin) tool names.



   .. py:method:: get_tool(name: str)

      Get a tool instance by name for direct access.



   .. py:method:: get_tool_function(name: str) -> Optional[agentx.tool.models.ToolFunction]

      Retrieve a tool function by its name.



   .. py:method:: get_tool_names() -> List[str]

      Get all registered tool names (alias for list_tools).



   .. py:method:: get_tool_schema(name: str) -> Optional[Dict[str, Any]]

      Get the JSON schema for a single tool.



   .. py:method:: get_tool_schemas(tool_names: Optional[List[str]] = None) -> List[Dict[str, Any]]

      Get a list of all tool schemas, optionally filtered.



   .. py:method:: list_tools() -> List[str]

      List all registered tool names.



   .. py:method:: list_toolsets() -> List[str]

      List all registered toolset names.



   .. py:method:: register_function(func: Callable, name: Optional[str] = None)

      Register a standalone function as a tool.



   .. py:method:: register_tool(tool: agentx.tool.models.Tool)

      Register all callable methods of a Tool instance.
      Each method marked with @tool is registered as a separate tool function.



   .. py:method:: register_toolset(name: str, tool_names: List[str])

      Register a collection of tools as a named toolset.



.. py:function:: get_tool_registry() -> ToolRegistry

   Get the global tool registry instance.


.. py:data:: logger

