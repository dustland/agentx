# MCP (Model Context Protocol) Tool Configuration for SuperWriter
# Similar to Cursor/Windsurf MCP configuration

[settings]
# Global MCP settings
auto_discovery = true
timeout = 30
max_retries = 3
log_level = "info"

# Research and Web Tools
[[tools]]
name = "web_searcher"
command = "uvx"
args = ["mcp-server-brave-search"]
env = { "BRAVE_API_KEY" = "${BRAVE_API_KEY}" }
description = "Advanced web search using Brave Search API"
categories = ["research", "web"]

[[tools]]
name = "webpage_reader"
command = "uvx"
args = ["mcp-server-fetch"]
description = "Fetch and read webpage content with markdown conversion"
categories = ["research", "content"]

[[tools]]
name = "arxiv_search"
command = "uvx"
args = ["mcp-server-arxiv"]
description = "Search academic papers on arXiv"
categories = ["research", "academic"]

# File and System Tools
[[tools]]
name = "file_operations"
command = "uvx"
args = ["mcp-server-filesystem", "--base-path", "./workspace"]
description = "Advanced file system operations with safety constraints"
categories = ["filesystem", "documents"]

[[tools]]
name = "git_operations"
command = "uvx"
args = ["mcp-server-git", "--repository", "./workspace"]
description = "Git version control for document management"
categories = ["version_control", "collaboration"]

# Content Creation Tools
[[tools]]
name = "markdown_processor"
command = "uvx"
args = ["mcp-server-markdown"]
description = "Advanced markdown processing and conversion"
categories = ["documents", "formatting"]

[[tools]]
name = "citation_manager"
command = "uvx"
args = ["mcp-server-zotero"]
env = { "ZOTERO_API_KEY" = "${ZOTERO_API_KEY}" }
description = "Academic citation management with Zotero integration"
categories = ["research", "citations"]

# AI and Analysis Tools
[[tools]]
name = "content_analyzer"
command = "uvx"
args = ["mcp-server-openai", "--model", "gpt-4o-mini"]
env = { "OPENAI_API_KEY" = "${OPENAI_API_KEY}" }
description = "Content analysis and quality assessment"
categories = ["quality", "analysis"]

[[tools]]
name = "grammar_checker"
command = "uvx"
args = ["mcp-server-languagetool"]
description = "Grammar and style checking"
categories = ["quality", "writing"]

# Database and Knowledge Tools
[[tools]]
name = "knowledge_base"
command = "uvx"
args = ["mcp-server-sqlite", "--database", "./workspace/knowledge.db"]
description = "Local knowledge base and fact storage"
categories = ["knowledge", "facts"]

[[tools]]
name = "web_scraper"
command = "uvx"
args = ["mcp-server-puppeteer"]
description = "Advanced web scraping and data extraction"
categories = ["research", "data"]

# Collaboration and Communication Tools  
[[tools]]
name = "slack_integration"
command = "uvx"
args = ["mcp-server-slack"]
env = { "SLACK_BOT_TOKEN" = "${SLACK_BOT_TOKEN}" }
description = "Slack integration for team communication"
categories = ["communication", "collaboration"]
enabled = false                                          # Disabled by default

# Development and Code Tools
[[tools]]
name = "code_analyzer"
command = "uvx"
args = ["mcp-server-github", "--token", "${GITHUB_TOKEN}"]
env = { "GITHUB_TOKEN" = "${GITHUB_TOKEN}" }
description = "GitHub integration for code examples and documentation"
categories = ["development", "examples"]

# Security and environment variable handling
[security]
# Allowed environment variables for MCP tools
allowed_env_vars = [
  "BRAVE_API_KEY",
  "OPENAI_API_KEY",
  "ZOTERO_API_KEY",
  "SLACK_BOT_TOKEN",
  "GITHUB_TOKEN",
]

# Resource limits
[limits]
max_concurrent_tools = 5
max_memory_mb = 512
max_execution_time_seconds = 60

# Tool categories for organization
[categories]
research = ["web_searcher", "webpage_reader", "arxiv_search", "web_scraper"]
documents = ["file_operations", "markdown_processor", "citation_manager"]
quality = ["content_analyzer", "grammar_checker", "knowledge_base"]
collaboration = ["git_operations", "slack_integration"]
development = ["code_analyzer"]

# Auto-discovery patterns
[discovery]
# Scan these directories for additional MCP servers
scan_paths = ["~/.local/bin", "./tools/mcp-servers", "/usr/local/bin"]

# File patterns for MCP server detection
patterns = ["mcp-server-*", "*-mcp-server", "mcp_*"]
