# WordX Backend Environment Configuration
# Copy this file to .env and fill in your API keys

# =============================================================================
# LLM Provider API Keys (set at least one)
# =============================================================================

# DeepSeek API Key (recommended for cost-effectiveness)
DEEPSEEK_API_KEY=your_deepseek_api_key_here
# Get your key at: https://platform.deepseek.com

# OpenAI API Key
OPENAI_API_KEY=your_openai_api_key_here
# Get your key at: https://platform.openai.com

# Anthropic Claude API Key
ANTHROPIC_API_KEY=your_anthropic_api_key_here
# Get your key at: https://console.anthropic.com

# Google Gemini API Key
GOOGLE_API_KEY=your_google_api_key_here
# Get your key at: https://makersuite.google.com

# =============================================================================
# Search Provider API Keys (optional but recommended)
# =============================================================================

# SerpAPI for web search
SERPAPI_API_KEY=your_serpapi_api_key_here
# Get your key at: https://serpapi.com

# Tavily API for web search (alternative)
TAVILY_API_KEY=your_tavily_api_key_here
# Get your key at: https://tavily.com

# Jina Reader API for web content extraction
JINA_API_KEY=your_jina_api_key_here
# Get your key at: https://jina.ai

# =============================================================================
# Memory Provider API Keys (optional)
# =============================================================================

# Mem0 for enhanced memory capabilities
MEM0_API_KEY=your_mem0_api_key_here
# Get your key at: https://mem0.ai

# =============================================================================
# AgentX Framework Configuration
# =============================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR)
AGENTX_LOG_LEVEL=INFO

# Enable verbose logging for debugging
AGENTX_VERBOSE=0

# Maximum conversation rounds
AGENTX_MAX_ROUNDS=50

# Default workspace directory
AGENTX_WORKSPACE_DIR=./workspace

# =============================================================================
# WordX Backend Configuration
# =============================================================================

# Backend server settings
WORDX_BACKEND_HOST=0.0.0.0
WORDX_BACKEND_PORT=8000

# Office.js Add-in server port (managed by office-addin-debugging)
WORDX_ADDON_PORT=3000

# Task processing timeout (seconds)
WORDX_TIMEOUT=300

# Maximum concurrent tasks
WORDX_MAX_CONCURRENT_TASKS=5

# Enable CORS for Office.js
WORDX_ENABLE_CORS=true

# Allowed origins for CORS
WORDX_CORS_ORIGINS=["https://localhost:3000", "http://localhost:3000", "https://localhost:8080"]

# =============================================================================
# Development Settings
# =============================================================================

# Enable development mode
DEBUG=0
DEVELOPMENT=0

# Enable hot reload for development
WORDX_RELOAD=false

# Database URL (if using database for persistence)
# DATABASE_URL=postgresql://user:pass@localhost/wordx

# =============================================================================
# Optional: Custom Model Configurations
# =============================================================================

# Custom model endpoints
# CUSTOM_MODEL_ENDPOINT=https://your-custom-endpoint.com
# CUSTOM_MODEL_API_KEY=your_custom_model_key

# =============================================================================
# Security Settings
# =============================================================================

# JWT secret for authentication (generate a secure random string)
# JWT_SECRET=your_jwt_secret_here

# API rate limiting
# RATE_LIMIT_REQUESTS_PER_MINUTE=100

# =============================================================================
# Notes
# =============================================================================
# 1. Copy this file to .env and fill in your API keys
# 2. Never commit the .env file to version control
# 3. Set at least one LLM provider API key for basic functionality
# 4. Search API keys are optional but enhance web research capabilities
# 5. Memory API keys are optional but improve context retention
# 6. For production, use environment variables or secure secret management
