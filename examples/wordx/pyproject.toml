[project]
name = "wordx"
version = "1.0.0"
description = "AI Assistant for Microsoft Word - AgentX powered document processing"
readme = "README.md"
authors = [{ name = "Dustland Team", email = "hi@dustland.ai" }]
license = { text = "MIT" }
requires-python = ">=3.9"
keywords = [
  "office",
  "word",
  "ai",
  "document-processing",
  "agentx",
  "multi-agent",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: FastAPI",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Office/Business",
  "Topic :: Text Processing",
]

dependencies = [
  # Core framework
  "agentx-py>=0.18.2",

  # Web framework
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.23.0",
  "python-multipart>=0.0.6",

  # Data validation
  "pydantic>=2.0.0",

  # HTTP client
  "httpx>=0.24.0",

  # Async support
  "asyncio-mqtt>=0.13.0",

  # Environment management
  "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.0",
  "black>=23.7.0",
  "flake8>=6.0.0",
]

[project.scripts]
wordx = "backend.main:main"
wordx-setup = "wordx_setup:main"

[project.urls]
"Homepage" = "https://github.com/dustland/agentx"
"Bug Tracker" = "https://github.com/dustland/agentx/issues"
"Documentation" = "https://docs.agentx.ai"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["backend"]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
