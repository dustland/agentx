name: "collaborative_writing"
description: "Multi-agent collaborative writing system with Writer and Reviewer agents"

# Team agents
agents:
  - name: "writer"
    description: "Professional writer who creates high-quality articles"
    prompt_template: "prompts/writer.md"
    tools: ["read_file", "write_file", "list_directory"]
    llm_config:
      provider: "deepseek"
      model: "deepseek-chat"
      base_url: "https://api.deepseek.com"
      temperature: 0.7
      max_tokens: 4000

  - name: "reviewer"
    description: "Expert reviewer who provides detailed feedback on written content"
    prompt_template: "prompts/reviewer.md"
    tools: ["read_file", "write_file", "list_directory"]
    llm_config:
      provider: "deepseek"
      model: "deepseek-chat"
      base_url: "https://api.deepseek.com"
      temperature: 0.3
      max_tokens: 4000

# Handoff rules for agent collaboration
handoff_rules:
  - from_agent: "writer"
    to_agent: "reviewer"
    condition: "initial_draft_complete"
  - from_agent: "reviewer"
    to_agent: "writer"
    condition: "review_provided"
  - from_agent: "reviewer"
    to_agent: "orchestrator"
    condition: "final_approval"

# Collaboration patterns
collaboration_patterns:
  - name: "writing_review_cycle"
    description: "Writer creates content, reviewer provides feedback, writer improves"
    steps:
      - agent: "writer"
        action: "create_initial_draft"
      - agent: "reviewer"
        action: "review_draft"
      - agent: "writer"
        action: "improve_based_on_feedback"
      - agent: "reviewer"
        action: "final_approval"

# Memory configuration
memory:
  enabled: true
  provider: "mem0"
  config:
    vector_store:
      provider: "chroma"
      config:
        collection_name: "collaborative_writing_memory"

# Execution configuration
execution:
  mode: "autonomous"
  max_rounds: 8 # Allow for multiple review cycles
  timeout_seconds: 600
  initial_agent: "writer"

# Tools configuration
tools: []

# Guardrail policies
guardrail_policies: []
